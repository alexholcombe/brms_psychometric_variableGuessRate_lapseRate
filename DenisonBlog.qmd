---
title: "DenisonBlog"
format: html
---

#Title Here

## Load in required packages

```{r}
library(tidyverse)
library(brms)
```

# Introduction

Holcombe lab did a replication and extension experiment based on Rodaia and Faubert's 2017 study on the effect of aging on temporal resolution in attentional tracking. We set out to compare the tracking ability of multiple objects between old and young people by analysing data from Holcombe's replication experiment and Rodaia and Faubert (2017) using BRMS (citation). In order to achieve this, we conducted? a model recovery to determine if our model could accurately captured key patterns and estimate important parameters of fake data that simulated expected results/experimental conditions.

# The Experiment

Participants in both experiments were given a stimulus that involved tracking two or three targets as they moved within rings. This stimulus had 3 concentric rings which each included 4, 5, 8 or 10 identical objects. Rodaia and Faubert (2017) tested participants with 5 and 10 objects while the Holcombe lab tested 4 and 8 objects to account for crowding zones. Each ring would rotate at a consistent speed for a set period of time and have a maximum of one target. Following the rotation, participants were asked to select the target on a prompted ring. 

-   Maybe visual/figure of what participant saw eg. figure one from Rodaia and Faubert (2017)

# Psychometric Function (Generating)

The fake data is generated based on our psychometric function for the sake of model recovery. Using (citation) we obtained the function

$$
P(\text{Correct}) =C+(1-C-L(1-C)) \times\Phi\bigg(\frac{-(X-\eta)}{\sigma}\bigg) 
$$

**Where**

-   $C$ is the chance rate of selecting the correct target (i.e. $\frac{1}{\text{# objects}}$) and represents a lower boundary of the function.

-   $L$ is the lapse rate parameter (i.e. the rate at which participants fail due to lapses in attention) and is included in the calculation of the upper boundary of the function.

-   $X$ is the speed in which objects move in a trial (RPS)

-   $\eta$ is the location parameter, representative of the $X$ in which $P(\text{Correct})$ is halfway between the upper boundary $(1-L(1-C))$ and lower boundary $C$.

-   $\sigma$ represents the scale parameter, representative of the shape/steepness about $\eta$. (We later use $\log(\sigma)$ for numerical stability in the brms model.)

**Note:**

-   We take the negative of $(X-\eta)$ in $\Phi\bigg(\frac{-(X-\eta)}{\sigma}\bigg)$ is taken in order to reflect the function (as speed increases, $P(\text{Correct})$ decreases)

-   The support of the function itself is $(-\infty,\infty)$ but speed is always positive. The model is not technically accurate but still useful with the right parameters.

## Example of the function (for illustrative purposes)

Here we have an example in which

-   $C=1/4$

-   $L = 0.1$

-   $\eta = 0.9$

-   $\sigma = 0.2$

```{r}
example <- dplyr::tibble(
    speed = seq(0,2.5, length.out = 500),
    C = 0.25,
    L = 0.1, # for il
    eta = 0.9,
    sigma = 0.2,
    phi = pnorm(-speed, -eta, sigma),
    probability_correct = C + (1-C - L*(1-C))*phi,
    upper_bound = 1 - L*(1-C)
)

ggplot(example) + 
  geom_hline(aes(yintercept = upper_bound, colour = "Upper Bound"), linetype = "dashed") +
  geom_hline(aes(yintercept = 0.25 , colour = "Lower Bound"), linetype = "dashed") +
  geom_vline(aes(xintercept = 0.9, colour = "eta")) +
  geom_line(aes(x = speed, y = probability_correct,
                colour = "Probability Correct")) +
  theme_light() +
  lims(x = c(0,2.5), y = c(0,1)) +
  scale_colour_manual(values = c("Upper Bound" = "blue", "Lower Bound" = "red", "eta" = "yellow", "Probability Correct" = "black")) +
  labs(colour = "Legend",
       x = "Speed (RPS)",
       y = "P(Correct)",
       title = "Example of Psychometric Function")
```

# Creating Simulated Data

In order to build and test our model in BRMS, we must first create a simulated data set that is similar to our actual experiment data but has arbitrary values for unknown parameters. This allows us to confirm the BRMS model is working and estimating parameters correctly before applying it to our real experimental data. In the actual data, there will be many group-wise differences in location and scale parameters. The following simulated data only has explicit differences between $\eta$ (location) of age groups (older vs younger).

```{r}
#| echo: false
set.seed(999) #ensures reproducible response for testing

#Set arbitrary/known values for parameters
lapse <- 0.03
sigma <- 0.2
location_parameter_younger <-0.91 
location_parameter_older <-0.5

#generate data frame for simulated data
simdata <- tidyr::expand_grid(
    subj = seq(1, 50), #number of subjects
    rep = seq(1,5), #replicants of each trial combination
    num_target = c(2,3), #number of targets particpant tracks
    speed = seq(.02,1.8, length.out = 12) # trials at 12 different speeds between .02 and 1.8
  )
#note: Holcombe lab's experiment had both a set number of trials at certain speeds and a speed staircase. Rodaia and Faubert (2017) had a set number of trails at certain intervals based on benchmark speeds and then a Bayesian adaptive procedure for the rest of the trials.

#Introducing demographic data and seperating the two labs
simdata <- simdata %>%
  group_by(subj) %>%
  mutate(
    gender = sample(c("M","F"), 1, replace = TRUE),
    age_group = sample(c("younger", "older"), 1, replace = TRUE),
    lab = sample(c("rf", "holcombe"), 1, replace = TRUE) 
  ) %>%
  ungroup()

# Splitting number of objects per ring based on lab
simdata <- simdata %>%
  mutate(
    obj_per_ring = case_when(
      lab == "rf" ~ sample(c(5,10), n(), replace=TRUE), #Rodaia and Faubert (2017) tested only 5 and 10 objects per ring
      lab == "holcombe" ~ sample(c(4,8), n(), replace = TRUE) #Holcombes lab tested only 4 and 8 objects per ring
    )
  )

#removed prompted ring for response from data

#Add column for the probability of each trial being correct based on our psychometric function
#then add column to generate if the subject got the trial correct
simdata <- simdata %>%
  mutate(
    chance_rate = 1/obj_per_ring,
    phi = ifelse(age_group == "younger",
                 pnorm(-speed, -location_parameter_younger, sigma),
                 pnorm(-speed, -location_parameter_older, sigma)),
    probability_correct = chance_rate + (1-chance_rate - lapse*(1-chance_rate))*phi,
    correct = rbinom(n=length(probability_correct), size = 1, prob = probability_correct)
  )

#Convert these variables from vectors to factors
simdata <- simdata %>%
  mutate(
    gender = as_factor(gender),
    age_group = as_factor(age_group),
    lab = as_factor(lab),
    gender = as_factor(gender)
  ) 

glimpse(simdata)

```

# Selecting Priors

Explanation of what priors are ...

## Prior on Lapse

-   We set a prior on lapse using a beta distribution that was bounded between 0 and 1

-   We know through previous literature (citation) that lapse is often between 0.03 and 0.04. Moreover, lapse is bounded between zero and one as it represents a rate. We then chose the beta distribution with a mode of 0.03 as …. - need to finish explanation

### Plot beta(2, 33.33)

```{r}
prior_lapse <- dplyr::tibble(
    x = seq(0, 1, length.out = 500),
    y = dbeta(x, 2, 33.33)
)

ggplot(prior_lapse) + aes(x = x, y = y) +
  geom_area(fill = "red", alpha = 0.2) +
  geom_line()+
  theme_light() +
  labs(
    x = "",
    y = ""
  )
```

## Prior on Location

-   We set a uniform prior for location with a lower bound of 0 and an upper bound of 2.5

-   The lower bound was set at 0 as you cannot have negative speed 

-   From previous research ( citations here) we know that a speed threshold and tracking ability over 2.5 revolutions per second are extremely rare. 

### Plot uniform(0, 2.5)

```{r}
prior_location <- dplyr::tibble(
    x = seq(-1, 10, length.out = 500),
    y = dunif(x, 0, 2.5)
)

ggplot(prior_location) + aes(x = x, y = y) +
  geom_area(fill = "red", alpha = 0.2) +
  geom_line() +
  theme_light() +
  labs(
    x = "",
    y = ""
  )
```

## Prior on Sigma (Scale)

-   Values of sigma can get extremely small and include many decimal points. Therefore, our BRMS model and by extention our prior transforms sigma into logsigma

-   include redone graph (see shared word doc)

-   Using a graph like the one above, we concluded that a sigma approximately between 0.05 and 5 would be a sufficient range to accommodate all participants

-   Converting this, we set a uniform prior on logsigma with a conservative lower and upper bound of -3 and 1.6 respectively.

### Plot uniform(0, 2.5)

```{r}
prior_scale <- dplyr::tibble(
    x = seq(-5, 5, length.out = 500),
    y = dunif(x, -3, 1.6)
)

ggplot(prior_scale) + aes(x = x, y = y) +
  geom_area(fill = "red", alpha = 0.2) +
  geom_line() +
  theme_light() +
  labs(
    x = "",
    y = ""
  )
```

```{r}
prior1 <- c(
  set_prior("beta(2,33.33)", class = "b", nlpar = "lapse", lb = 0, ub = 1),
  set_prior("uniform(0, 2.5)", class = "b", nlpar = "eta", lb = 0, ub = 2.5),
  set_prior("uniform(-3, 1.6)", class = "b", nlpar = "logsigma", lb = -2, ub = 1.6) 
)
```

# Setting our Model in BRMS

The model we use is based off our psychometric function used to generate the data mentioned previously. However, we estimate the parameter of $\log(\sigma)$ rather than $\sigma$ for the sake of model stability in brms.

```{r}
#| echo: false
model_formula <- bf(
  correct ~ chance_rate + (1-chance_rate - lapse*(1-chance_rate))*Phi(-(speed-eta)/exp(logsigma)),
  eta ~ age_group, 
  lapse ~ 1,
  logsigma ~ age_group,
  family = bernoulli(link="identity"), #because otherwise default link logit would be used
  nl = TRUE
)
```

# Fitting Model to Simulated Data

```{r}
#| echo: false

fit <- brm(
  model_formula,
  data = simdata,
  #control = list(adapt_delta = 0.99),
  prior = prior1,
  silent = 0,
  init = 0,
  chains = 4,
  cores = 4, #how many parallel processes, speeds up model 
  iter = 2000, #default number of iterations 
  threads = threading(2) #how many cores work per chain
)

summary(fit)
```

# Acknowledgements

-   Extensive use of Microsoft Copilot
